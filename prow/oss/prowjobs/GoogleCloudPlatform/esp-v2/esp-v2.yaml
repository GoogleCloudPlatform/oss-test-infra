presubmits:
  GoogleCloudPlatform/esp-v2:
  - name: ESPv2-build
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: build
      description: "Generates docker images to deploy in e2e tests."
    spec:
      containers:
      - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
        command:
        - ./prow/gcpproxy-build.sh
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-presubmit
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: presubmit
      description: "Runs all unit and integration tests."
    spec:
      containers:
      - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
        command:
        - ./prow/gcpproxy-presubmit.sh
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-presubmit-asan
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: presubmit-asan
      description: "Runs all unit and integration tests with ASan."
    spec:
      containers:
      - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
        command:
        - ./prow/presubmit-asan.sh
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-presubmit-tsan
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: presubmit-tsan
      description: "Runs all unit and integration tests with TSan."
    spec:
      containers:
      - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
        command:
        - ./prow/presubmit-tsan.sh
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-presubmit-coverage
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: coverage
      description: "Generates coverage report for a subset of presubmit tests."
    spec:
      containers:
      - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
        command:
        - ./prow/gcpproxy-coverage.sh
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-gke-e2e-tight-http-bookstore-managed
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: e2e-gke-http-bookstore
      description: "Runs e2e tests for GKE."
    spec:
      containers:
      - args:
        - --cluster=
        - --deployment=gke
        - --extract=release/stable-1.14
        - --gcp-project=cloudesf-testing
        - --gcp-zone=us-west1-b
        - --gcp-network=default
        - --gcp-node-image=gci
        - --gke-create-command=container clusters create --cluster-ipv4-cidr=/19 --quiet
        - '--gke-shape={"default":{"Nodes":1,"MachineType":"n1-standard-2"}}'
        - --gke-environment=prod
        - --provider=gke
        - --env=TEST_CASE=tight-http-bookstore-managed
        - --test=false
        - --test-cmd=../prow/gcpproxy-e2e.sh
        - --test-cmd-name=gcpproxy_e2e
        - --timeout=80m
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-public
        - name: USER
          value: prow
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cloudesf-ssh-key-secret
          mountPath: /etc/cloudesf-ssh-key-secret
          readOnly: true
      volumes:
      - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
        secret:
          secretName: service-account
      - name: cloudesf-ssh-key-secret
        secret:
          secretName: cloudesf-ssh-key-secret
  - name: ESPv2-gke-e2e-tight-grpc-echo-managed
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: e2e-gke-grpc-echo
      description: "Runs e2e tests for GKE."
    spec:
      containers:
      - args:
        - --cluster=
        - --deployment=gke
        - --extract=release/stable-1.14
        - --gcp-project=cloudesf-testing
        - --gcp-zone=us-west1-b
        - --gcp-network=default
        - --gcp-node-image=gci
        - --gke-create-command=container clusters create --cluster-ipv4-cidr=/19 --quiet
        - '--gke-shape={"default":{"Nodes":1,"MachineType":"n1-standard-2"}}'
        - --gke-environment=prod
        - --provider=gke
        - --env=TEST_CASE=tight-grpc-echo-managed
        - --test=false
        - --test-cmd=../prow/gcpproxy-e2e.sh
        - --test-cmd-name=gcpproxy_e2e
        - --timeout=80m
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-public
        - name: USER
          value: prow
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cloudesf-ssh-key-secret
          mountPath: /etc/cloudesf-ssh-key-secret
          readOnly: true
      volumes:
      - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
        secret:
          secretName: service-account
      - name: cloudesf-ssh-key-secret
        secret:
          secretName: cloudesf-ssh-key-secret
  - name: ESPv2-gke-e2e-tight-grpc-interop-managed
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: e2e-gke-grpc-interop
      description: "Runs e2e tests for GKE."
    spec:
      containers:
      - args:
        - --cluster=
        - --deployment=gke
        - --extract=release/stable-1.14
        - --gcp-project=cloudesf-testing
        - --gcp-zone=us-west1-b
        - --gcp-network=default
        - --gcp-node-image=gci
        - --gke-create-command=container clusters create --cluster-ipv4-cidr=/19 --quiet
        - '--gke-shape={"default":{"Nodes":1,"MachineType":"n1-standard-2"}}'
        - --gke-environment=prod
        - --provider=gke
        - --env=TEST_CASE=tight-grpc-interop-managed
        - --test=false
        - --test-cmd=../prow/gcpproxy-e2e.sh
        - --test-cmd-name=gcpproxy_e2e
        - --timeout=80m
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-public
        - name: USER
          value: prow
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cloudesf-ssh-key-secret
          mountPath: /etc/cloudesf-ssh-key-secret
          readOnly: true
      volumes:
      - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
        secret:
          secretName: service-account
      - name: cloudesf-ssh-key-secret
        secret:
          secretName: cloudesf-ssh-key-secret
  - name: ESPv2-anthos-cloud-run-e2e-anthos-cloud-run-http-bookstore
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: e2e-cloud-run-anthos-http-bookstore
      description: "Runs e2e tests for Cloud Run with Anthos."
    spec:
      containers:
      - args:
        - --cluster=
        - --deployment=gke
        - --gcp-project=cloudesf-testing
        - --gcp-zone=us-west1-b
        - --gcp-network=default
        - --gcp-node-image=gci
        - --gke-environment=prod
        - --provider=gke
        - --env=TEST_CASE=anthos-cloud-run-anthos-cloud-run-http-bookstore
        - --test=false
        - --test-cmd=../prow/gcpproxy-e2e.sh
        - --test-cmd-name=gcpproxy_e2e
        - --timeout=80m
        - --extract=release/stable-1.14
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/cloudesf-ssh-key-secret/ssh-public
        - name: USER
          value: prow
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cloudesf-ssh-key-secret
          mountPath: /etc/cloudesf-ssh-key-secret
          readOnly: true
      volumes:
      - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
        secret:
          secretName: service-account
      - name: cloudesf-ssh-key-secret
        secret:
          secretName: cloudesf-ssh-key-secret
  - name: ESPv2-cloud-run-e2e-cloud-run-http-bookstore
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: e2e-cloud-run-http-bookstore
      description: "Runs e2e tests for Cloud Run."
    spec:
      containers:
      - image: gcr.io/cloudesf-testing/gcpproxy-prow:v20200309-v2.6.0-15-gd62fe00-master
        command:
        - ./prow/gcpproxy-e2e.sh
        env:
        - name: TEST_CASE
          value: cloud-run-cloud-run-http-bookstore
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-cloud-run-e2e-cloud-function-http-bookstore
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: e2e-cloud-function-http-bookstore
      description: "Runs e2e tests for Cloud Functions."
    spec:
      containers:
      - image: gcr.io/cloudesf-testing/gcpproxy-prow:v20200309-v2.6.0-15-gd62fe00-master
        command:
        - ./prow/gcpproxy-e2e.sh
        env:
        - name: TEST_CASE
          value: cloud-run-cloud-function-http-bookstore
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-cloud-run-e2e-cloud-run-grpc-echo
    cluster: espv2
    always_run: true
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-presubmit
      testgrid-tab-name: e2e-cloud-run-grpc-echo
      description: "Runs e2e tests for Cloud Run."
    spec:
      containers:
      - image: gcr.io/cloudesf-testing/gcpproxy-prow:v20200309-v2.6.0-15-gd62fe00-master
        command:
        - ./prow/gcpproxy-e2e.sh
        env:
        - name: TEST_CASE
          value: cloud-run-cloud-run-grpc-echo
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account

periodics:
  - name: ESPv2-continuous-build
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: build
      description: "Generates docker images to deploy in e2e tests."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
          command:
            - ./prow/continuous-build.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-continuous-presubmit
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: presubmit
      description: "Runs all unit and integration tests."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
          command:
            - ./prow/gcpproxy-presubmit.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-continuous-presubmit-asan
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: presubmit-asan
      description: "Runs all unit and integration tests with ASan."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
          command:
            - ./prow/presubmit-asan.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-continuous-presubmit-tsan
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: presubmit-tsan
      description: "Runs all unit and integration tests with TSan."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
          command:
            - ./prow/presubmit-tsan.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-continuous-coverage
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: coverage
      description: "Generates coverage report for a subset of presubmit tests."
    extra_refs:
    - org: GoogleCloudPlatform
      repo: esp-v2
      base_ref: master
    spec:
      containers:
      - image:  gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
        command:
        - ./prow/gcpproxy-coverage.sh
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
          value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
        volumeMounts:
        - name: cloudesf-testing-github-prow-service-account
          mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-continuous-gke-e2e-tight-http-bookstore-managed
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    decoration_config:
        timeout: 5h
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: e2e-gke-http-bookstore
      description: "Runs e2e tests for GKE."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - args:
            - --cluster=
            - --deployment=gke
            - --extract=release/stable-1.14
            - --gcp-project=cloudesf-testing
            - --gcp-zone=us-west1-c
            - --gcp-network=default
            - --gcp-node-image=gci
            - --gke-create-command=container clusters create --cluster-ipv4-cidr=/19 --quiet
            - '--gke-shape={"default":{"Nodes":1,"MachineType":"n1-standard-2"}}'
            - --gke-environment=prod
            - --provider=gke
            - --test=false
            - --test-cmd=../prow/e2e-tight_http_bookstore_managed_long_run.sh
            - --test-cmd-name=gcpproxy_e2e
            - --timeout=300m
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-private
            - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-public
            - name: USER
              value: prow
          volumeMounts:
            - name: service
              mountPath: /etc/service-account
              readOnly: true
            - name: cloudesf-ssh-key-secret
              mountPath: /etc/cloudesf-ssh-key-secret
              readOnly: true
      volumes:
        - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
          secret:
            secretName: service-account
        - name: cloudesf-ssh-key-secret
          secret:
            secretName: cloudesf-ssh-key-secret
  - name: ESPv2-continuous-gke-e2e-tight-grpc-echo-managed
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    decoration_config:
      timeout: 5h
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: e2e-gke-grpc-echo
      description: "Runs e2e tests for GKE."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - args:
            - --cluster=
            - --deployment=gke
            - --extract=release/stable-1.14
            - --gcp-project=cloudesf-testing
            - --gcp-zone=us-west1-c
            - --gcp-network=default
            - --gcp-node-image=gci
            - --gke-create-command=container clusters create --cluster-ipv4-cidr=/19 --quiet
            - '--gke-shape={"default":{"Nodes":1,"MachineType":"n1-standard-2"}}'
            - --gke-environment=prod
            - --provider=gke
            - --test=false
            - --test-cmd=../prow/e2e-tight_grpc_echo_managed_long_run.sh
            - --test-cmd-name=gcpproxy_e2e
            - --timeout=300m
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-private
            - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-public
            - name: USER
              value: prow
          volumeMounts:
            - name: service
              mountPath: /etc/service-account
              readOnly: true
            - name: cloudesf-ssh-key-secret
              mountPath: /etc/cloudesf-ssh-key-secret
              readOnly: true
      volumes:
        - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
          secret:
            secretName: service-account
        - name: cloudesf-ssh-key-secret
          secret:
            secretName: cloudesf-ssh-key-secret
  - name: ESPv2-continuous-gke-e2e-tight-grpc-interop-managed
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    decoration_config:
      timeout: 5h
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: e2e-gke-grpc-interop
      description: "Runs e2e tests for GKE."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - args:
            - --cluster=
            - --deployment=gke
            - --extract=release/stable-1.14
            - --gcp-project=cloudesf-testing
            - --gcp-zone=us-west1-c
            - --gcp-network=default
            - --gcp-node-image=gci
            - --gke-create-command=container clusters create --cluster-ipv4-cidr=/19 --quiet
            - '--gke-shape={"default":{"Nodes":1,"MachineType":"n1-standard-2"}}'
            - --gke-environment=prod
            - --provider=gke
            - --test=false
            - --test-cmd=../prow/e2e-tight_grpc_interop_managed_long_run.sh
            - --test-cmd-name=gcpproxy_e2e
            - --timeout=300m
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-private
            - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-public
            - name: USER
              value: prow
          volumeMounts:
            - name: service
              mountPath: /etc/service-account
              readOnly: true
            - name: cloudesf-ssh-key-secret
              mountPath: /etc/cloudesf-ssh-key-secret
              readOnly: true
      volumes:
        - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
          secret:
            secretName: service-account
        - name: cloudesf-ssh-key-secret
          secret:
            secretName: cloudesf-ssh-key-secret
  - name: ESPv2-continuous-anthos-cloud-run-e2e-cloud-run-http-bookstore
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    decoration_config:
      timeout: 5h
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: e2e-cloud-run-anthos-http-bookstore
      description: "Runs e2e tests for Cloud Run with Anthos."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - args:
            - --cluster=
            - --deployment=gke
            - --gcp-project=cloudesf-testing
            - --gcp-zone=us-west1-c
            - --gcp-network=default
            - --gcp-node-image=gci
            - --gke-environment=prod
            - --provider=gke
            - --test=false
            - --test-cmd=../prow/e2e-anthos-cloud-run-anthos-cloud-run-http-bookstore.sh
            - --test-cmd-name=gcpproxy_e2e
            - --timeout=300m
            - --extract=release/stable-1.14
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          image: gcr.io/k8s-testimages/kubekins-e2e:v20200114-6d2c483-master
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/service-account/service-account.json
            - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-private
            - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
              value: /etc/cloudesf-ssh-key-secret/ssh-public
            - name: USER
              value: prow
          volumeMounts:
            - name: service
              mountPath: /etc/service-account
              readOnly: true
            - name: cloudesf-ssh-key-secret
              mountPath: /etc/cloudesf-ssh-key-secret
              readOnly: true
      volumes:
        - name: service # TODO(fejta): remove https://github.com/GoogleCloudPlatform/oss-test-infra/issues/202
          secret:
            secretName: service-account
        - name: cloudesf-ssh-key-secret
          secret:
            secretName: cloudesf-ssh-key-secret
  - name: ESPv2-continuous-cloud-run-e2e-cloud-run-http-bookstore
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    decoration_config:
      timeout: 5h
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: e2e-cloud-run-http-bookstore
      description: "Runs e2e tests for Cloud Run."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image: gcr.io/cloudesf-testing/gcpproxy-prow:v20200309-v2.6.0-15-gd62fe00-master
          command:
            - ./prow/e2e-cloud-run-cloud-run-http-bookstore.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-continuous-cloud-run-e2e-cloud-function-http-bookstore
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    decoration_config:
      timeout: 5h
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: e2e-cloud-function-http-bookstore
      description: "Runs e2e tests for Cloud Functions."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image: gcr.io/cloudesf-testing/gcpproxy-prow:v20200309-v2.6.0-15-gd62fe00-master
          command:
            - ./prow/e2e-cloud-run-cloud-function-http-bookstore.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-continuous-cloud-run-e2e-cloud-run-grpc-echo
    cluster: espv2
    cron: '0 * * * *' # Run by every hour
    decorate: true
    decoration_config:
      timeout: 5h
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: e2e-cloud-run-grpc-echo
      description: "Runs e2e tests for Cloud Run."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image: gcr.io/cloudesf-testing/gcpproxy-prow:v20200309-v2.6.0-15-gd62fe00-master
          command:
            - ./prow/e2e-cloud-run-cloud-run-grpc-echo.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-gke-janitor
    cluster: espv2
    cron: '0 */3 * * *' # Run by every 3 hours
    labels:
      preset-service-account: "true"
    decorate: true
    decoration_config:
      timeout: 40m
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: janitor-gke
      description: "Cleans up orphan e2e resources for GKE."
    extra_refs:
      - org: kubernetes
        repo: test-infra
        base_ref: master
        path_alias: k8s.io/test-infra
    spec:
      containers:
        - command:
            - runner.sh
            - ./scenarios/kubernetes_janitor.py
          args:
            - --mode=custom
            - --projects=cloudesf-testing
            - --age=5 # clean anything older than 5h
            - '--filter=name~^e2e-'
            - --verbose
          image: gcr.io/k8s-testimages/kubekins-e2e:v20191203-6fb6647-1.17
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
          - name: cloudesf-testing-github-prow-service-account
            mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
      - name: cloudesf-testing-github-prow-service-account
        secret:
          secretName: cloudesf-testing-github-prow-service-account
  - name: ESPv2-serverless-janitor
    cluster: espv2
    cron: '0 6 * * *' # Run every day at 6am
    decorate: true
    annotations:
      testgrid-dashboards: googleoss-esp-v2-periodic
      testgrid-tab-name: janitor-serverless
      description: "Cleans up orphan e2e resources for Serverless."
    extra_refs:
      - org: GoogleCloudPlatform
        repo: esp-v2
        base_ref: master
    spec:
      containers:
        - image: gcr.io/cloudesf-testing/gcpproxy-prow:v20200527-v2.10.0-7-g332387c-master
          command:
            - ./prow/janitor.sh
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /etc/cloudesf-testing-github-prow-service-account/service-account.json
          volumeMounts:
            - name: cloudesf-testing-github-prow-service-account
              mountPath: /etc/cloudesf-testing-github-prow-service-account
      volumes:
        - name: cloudesf-testing-github-prow-service-account
          secret:
            secretName: cloudesf-testing-github-prow-service-account
