presubmits:
  kubeflow/pipelines:
  - name: kubeflow-pipeline-frontend-test
    run_if_changed: "^frontend/.*$"
    cluster: build-kubeflow
    decorate: true
    spec:
      containers:
      - image: node:14
        command:
        - /bin/sh
        args:
        - -c
        - cd ./frontend && npm run test:ci:prow
  - name: kubeflow-pipeline-backend-test
    run_if_changed: "^(backend/.*)|(test/presubmit-backend-test.sh)$"
    cluster: build-kubeflow
    decorate: true
    spec:
      containers:
      - image: golang:1.20-bullseye
        command:
        - ./test/presubmit-backend-test.sh
  - name: kubeflow-pipeline-e2e-test
    run_if_changed: "^(frontend/.*)|(backend/.*)|(proxy/.*)|(manifests/kustomize/.*)|(test/.*)|go.mod|go.sum$"
    cluster: build-kubeflow
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210113-cc576af-master
        command:
        - ./test/presubmit-tests-with-pipeline-deployment.sh
        args:
        - --workflow_file
        - e2e_test_gke_v2.yaml
        - --test_result_folder
        - e2e_test
  - name: kubeflow-pipeline-mkp-test
    run_if_changed: "^(manifests/gcp_marketplace/.*)|(test/presubmit-tests-mkp.sh)|(test/tag_for_hosted.sh)|(test/cloudbuild/mkp_verify.yaml)$"
    cluster: build-kubeflow
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210113-cc576af-master
        command:
        - ./test/presubmit-tests-mkp.sh
  - name: kubeflow-pipeline-mkp-snapshot-test
    run_if_changed: "^(manifests/gcp_marketplace/.*)$"
    cluster: build-kubeflow
    decorate: true
    spec:
      containers:
      - image: bash:alpine3.14
        command:
        - bash
        args:
        # We cannot call the shell script directly because the shebang in script is /bin/bash,
        # but the bash:alpine3.14 image has its bash in /usr/local/bin/bash.
        - ./manifests/gcp_marketplace/test/presubmit.sh 
  - name: kubeflow-pipeline-upgrade-test
    run_if_changed: "^(backend/.*)|(manifests/kustomize/.*)|(test/upgrade.*)$"
    cluster: build-kubeflow
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210113-cc576af-master
        command:
        - ./test/upgrade-tests.sh
        args:
        - --test_result_folder
        - upgrade_test
  - name: kubeflow-pipeline-upgrade-test-v2
    run_if_changed: "^(backend/.*)|(manifests/kustomize/.*)|(test/upgrade.*)$"
    cluster: build-kubeflow
    decorate: true
    # TODO(chensun): mark as required once verified v2 upgrade test working
    optional: true
    skip_report: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210113-cc576af-master
        command:
        - ./test/upgrade-tests.sh
        args:
        - --test_result_folder
        - upgrade_test
        - --test_v2_api

  - name: kubeflow-pipelines-sdk-python37
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/.*)|(test/presubmit-tests-sdk.sh)$"
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-tests-sdk.sh

  - name: kubeflow-pipelines-sdk-python38
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/.*)|(test/presubmit-tests-sdk.sh)$"
    spec:
      containers:
      - image: python:3.8
        command:
        - ./test/presubmit-tests-sdk.sh

  - name: kubeflow-pipelines-sdk-python39
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/.*)|(test/presubmit-tests-sdk.sh)$"
    spec:
      containers:
      - image: python:3.9
        command:
        - ./test/presubmit-tests-sdk.sh

  - name: kubeflow-pipelines-sdk-python310
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/.*)|(test/presubmit-tests-sdk.sh)$"
    spec:
      containers:
      - image: python:3.10
        command:
        - ./test/presubmit-tests-sdk.sh

  - name: kubeflow-pipelines-sdk-python311
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/.*)|(test/presubmit-tests-sdk.sh)$"
    branches:
      - master
    spec:
      containers:
      - image: python:3.11
        command:
        - ./test/presubmit-tests-sdk.sh

  - name: kubeflow-pipelines-tfx-python37
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/.*)|(test/presubmit-tests-tfx.sh)$"
    branches:
    - sdk/release-1.8
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-tests-tfx.sh

  - name: kubeflow-pipelines-component-yaml
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(components/.*\\.yaml)|(test/presubmit-component-yaml.sh)|(sdk/python/.*)$"
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-component-yaml.sh

  - name: kubeflow-pipelines-components-google-cloud-python38
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(components/google-cloud/.*)$"
    spec:
      containers:
      - image: python:3.8
        command:
        - ./components/google-cloud/tests/presubmit.sh

  - name: kubeflow-pipelines-backend-visualization
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(backend/src/apiserver/visualization/.*)|(test/presubmit-backend-visualization.sh)$"
    spec:
      containers:
      - image: python:3.8
        command:
        - ./test/presubmit-backend-visualization.sh
  
  - name: kubeflow-pipelines-samples-v2
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(samples/.*)|(backend/src/v2/.*)$"
    # TODO(chensun): restore as required test once we migrated sample test to use v2 client.
    optional: true
    spec:
      containers:
      - image: python:3.7
        command:
        - ./backend/src/v2/test/sample-test.sh
    skip_branches:
    - ^sdk\/release-1.*$
  
  - name: kubeflow-pipelines-integration-v2
    run_if_changed: "^(samples/core/(parameterized_tfx_oss|dataflow)/.*)$"
    cluster: build-kubeflow
    decorate: true
    spec:
      containers:
      - image: python:3.7
        command:
        - ./backend/src/v2/test/integration-test.sh

  - name: kubeflow-pipelines-manifests
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^manifests/kustomize/.*$"
    spec:
      containers:
      - image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
        command:
        - ./manifests/kustomize/hack/presubmit.sh
  - name: kubeflow-pipelines-sdk-isort
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/.*)|(test/presubmit-isort-sdk.sh)$"
    branches:
    - master
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-isort-sdk.sh
  - name: kubeflow-pipelines-sdk-yapf
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/.*)|(test/presubmit-yapf-sdk.sh)$"
    branches:
    - master
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-yapf-sdk.sh
  - name: kubeflow-pipelines-sdk-docformatter
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/.*)|(test/presubmit-docformatter-sdk.sh)$"
    branches:
    - master
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-docformatter-sdk.sh
  - name: kubeflow-pipelines-sdk-execution-tests
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/.*)|(test/presubmit-sdk-execution-tests.sh)$"
    # TODO(chensun): restore as required test once we upgraded the test deployment.
    optional: true
    skip_report: true
    branches:
    - master
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-sdk-execution-tests.sh

# kfp.kubernetes tests
  - name: kfp-kubernetes-test-python37
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(kubernetes_platform/.*)|(test/presubmit-test-kfp-kubernetes-library.sh)$"
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-test-kfp-kubernetes-library.sh

  - name: kfp-kubernetes-test-python38
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(kubernetes_platform/.*)|(test/presubmit-test-kfp-kubernetes-library.sh)$"
    spec:
      containers:
      - image: python:3.8
        command:
        - ./test/presubmit-test-kfp-kubernetes-library.sh

  - name: kfp-kubernetes-test-python39
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(kubernetes_platform/.*)|(test/presubmit-test-kfp-kubernetes-library.sh)$"
    spec:
      containers:
      - image: python:3.9
        command:
        - ./test/presubmit-test-kfp-kubernetes-library.sh

  - name: kfp-kubernetes-test-python310
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(kubernetes_platform/.*)|(test/presubmit-test-kfp-kubernetes-library.sh)$"
    spec:
      containers:
      - image: python:3.10
        command:
        - ./test/presubmit-test-kfp-kubernetes-library.sh
  
  - name: kfp-kubernetes-test-python311
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(kubernetes_platform/.*)|(test/presubmit-test-kfp-kubernetes-library.sh)$"
    spec:
      containers:
      - image: python:3.11
        command:
        - ./test/presubmit-test-kfp-kubernetes-library.sh

  - name: kfp-dsl-runtime-code-test-python37
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/kfp-dsl/.*)|(test/presubmit-test-kfp-dsl-runtime-code.sh)$"
    spec:
      containers:
      - image: python:3.7
        command:
        - ./test/presubmit-test-kfp-dsl-runtime-code.sh

  - name: kfp-dsl-runtime-code-test-python38
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/kfp-dsl/.*)|(test/presubmit-test-kfp-dsl-runtime-code.sh)$"
    spec:
      containers:
      - image: python:3.8
        command:
        - ./test/presubmit-test-kfp-dsl-runtime-code.sh

  - name: kfp-dsl-runtime-code-test-python39
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/kfp-dsl/.*)|(test/presubmit-test-kfp-dsl-runtime-code.sh)$"
    spec:
      containers:
      - image: python:3.9
        command:
        - ./test/presubmit-test-kfp-dsl-runtime-code.sh

  - name: kfp-dsl-runtime-code-test-python310
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/kfp-dsl/.*)|(test/presubmit-test-kfp-dsl-runtime-code.sh)$"
    spec:
      containers:
      - image: python:3.10
        command:
        - ./test/presubmit-test-kfp-dsl-runtime-code.sh

  - name: kfp-dsl-runtime-code-test-python311
    cluster: build-kubeflow
    decorate: true
    run_if_changed: "^(sdk/python/kfp-dsl/.*)|(test/presubmit-test-kfp-dsl-runtime-code.sh)$"
    spec:
      containers:
      - image: python:3.11
        command:
        - ./test/presubmit-test-kfp-dsl-runtime-code.sh

  # this test is not passing
  # - name: kubeflow-pipeline-multiuser-test
  #   cluster: build-kubeflow
  #   decorate: true
  #   optional: true
  #   always_run: false
  #   skip_report: false
  #   spec:
  #     containers:
  #     - image: gcr.io/k8s-testimages/kubekins-e2e:v20210113-cc576af-master
  #       command:
  #       - ./test/multiuser-tests.sh
  #       args:
  #       - --workflow_file
  #       - multiuser_test.yaml
  #       - --test_result_folder
  #       - multiuser_test
